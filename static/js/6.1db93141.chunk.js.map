{"version":3,"sources":["components/sidebar/index.js","components/exportXls/index.js","components/exportPdf/index.js","actions/index.js","components/admin/home.js","components/admin/userManage.js","components/admin/index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","marginBottom","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","Navbar","setPresentPage","classes","useTheme","React","useState","open","setOpen","anchorEl","setAnchorEl","openAnchor","Boolean","dispatch","useDispatch","user","useSelector","state","logstate","handleClose","className","position","color","clsx","isAdmin","onClick","edge","variant","style","name","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","logout","paper","direction","map","text","index","button","primary","to","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ExportXls","dataList","data","element","label","value","JSON","stringify","ExportPdf","MyDoc","size","wrap","render","pageNumber","totalPages","v","chart_label","chart_type","data_source","margin","usePDF","document","instance","loading","error","href","url","download","login","type","payload","addUser","editUser","deleteUser","addData","editData","deleteData","fab","bottom","right","Home","editvals","seteditvals","open1","setOpen1","chartRefs","useRef","length","charts","submit","e","a","preventDefault","tar","target","details","current","x","y","r","chartDraw","undefined","destroy","Chart","getContext","labels","datasets","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","useEffect","forEach","Container","paddingLeft","Fab","Dialog","onSubmit","DialogTitle","DialogContent","DialogContentText","TextField","required","fullWidth","helperText","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","Button","startIcon","editlist","parseInt","hidden","readOnly","defaultValue","i","ref","el","tid","findIndex","elem","tempvals","UserManage","userEdit","setUserEdit","tempVals","setTempVals","users","role","permissions","TableContainer","component","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","val","scope","IconButton","tempHolder","editList","Admin","presentPage"],"mappings":"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","file":"static/js/6.1db93141.chunk.js","sourcesContent":["import React from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport List from '@material-ui/core/List'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport { logout } from '../../actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginBottom: '64px',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}))\r\n\r\nexport default function Navbar({ setPresentPage }) {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const openAnchor = Boolean(anchorEl)\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector((state) => state.logstate)\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {user !== null ? (\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        color=\"secondary\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: open,\r\n                        })}\r\n                    >\r\n                        <Toolbar>\r\n                            {user.isAdmin && (\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={handleDrawerOpen}\r\n                                    edge=\"start\"\r\n                                    className={clsx(classes.menuButton, {\r\n                                        [classes.hide]: open,\r\n                                    })}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            )}\r\n                            <Typography variant=\"h6\" style={{ flexGrow: '1' }}>\r\n                                Hello {user.name}\r\n                            </Typography>\r\n                            <div>\r\n                                <IconButton\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-controls=\"menu-appbar\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleMenu}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <AccountCircle />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"menu-appbar\"\r\n                                    anchorEl={anchorEl}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    keepMounted\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={openAnchor}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        Profile\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        onClick={() => dispatch(logout())}\r\n                                    >\r\n                                        Logout\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {user.isAdmin && (\r\n                        <Drawer\r\n                            variant=\"permanent\"\r\n                            className={clsx(classes.drawer, {\r\n                                [classes.drawerOpen]: open,\r\n                                [classes.drawerClose]: !open,\r\n                            })}\r\n                            classes={{\r\n                                paper: clsx({\r\n                                    [classes.drawerOpen]: open,\r\n                                    [classes.drawerClose]: !open,\r\n                                }),\r\n                            }}\r\n                        >\r\n                            <div className={classes.toolbar}>\r\n                                <IconButton onClick={handleDrawerClose}>\r\n                                    {theme.direction === 'rtl' ? (\r\n                                        <ChevronRightIcon />\r\n                                    ) : (\r\n                                        <ChevronLeftIcon />\r\n                                    )}\r\n                                </IconButton>\r\n                            </div>\r\n                            <Divider />\r\n                            <List>\r\n                                {['Home', 'User Management'].map(\r\n                                    (text, index) => (\r\n                                        <ListItem\r\n                                            button\r\n                                            key={text}\r\n                                            onClick={() =>\r\n                                                index % 2 === 0\r\n                                                    ? setPresentPage('Home')\r\n                                                    : setPresentPage('uManage')\r\n                                            }\r\n                                        >\r\n                                            <ListItemIcon>\r\n                                                {index === 0 ? (\r\n                                                    <HomeIcon />\r\n                                                ) : (\r\n                                                    <VerifiedUserIcon />\r\n                                                )}\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={text} />\r\n                                        </ListItem>\r\n                                    ),\r\n                                )}\r\n                            </List>\r\n                            <Divider />\r\n                        </Drawer>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <Redirect to=\"/DD-User-management/\" />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactExport from 'react-data-export'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ExcelFile = ReactExport.ExcelFile\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn\r\n\r\nconst ExportXls = () => {\r\n    const dataList = useSelector((state) => state.data)\r\n    return (\r\n        <ExcelFile\r\n            element={\r\n                <button style={{ marginRight: '10px' }}>Export to Xlsx</button>\r\n            }\r\n        >\r\n            <ExcelSheet data={dataList} name=\"Data\">\r\n                <ExcelColumn label=\"id\" value=\"id\" />\r\n                <ExcelColumn label=\"chart_label\" value=\"chart_label\" />\r\n                <ExcelColumn label=\"chart_type\" value=\"chart_type\" />\r\n                <ExcelColumn label=\"data_source\" value=\"data_source\" />\r\n                <ExcelColumn\r\n                    label=\"data\"\r\n                    value={(data) => JSON.stringify(data.data)}\r\n                />\r\n            </ExcelSheet>\r\n        </ExcelFile>\r\n    )\r\n}\r\n\r\nexport default ExportXls\r\n","import { usePDF, Document, Page, Text } from '@react-pdf/renderer'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ExportPdf = () => {\r\n    const dataList = useSelector((state) => state.data)\r\n\r\n    const MyDoc = (\r\n        <Document>\r\n            <Page size=\"A4\" wrap={true}>\r\n                <Text\r\n                    render={({ pageNumber, totalPages }) =>\r\n                        `${dataList.map(\r\n                            (v) =>\r\n                                `ID : ${v.id}, chart_label : ${\r\n                                    v.chart_label\r\n                                }, chart_type : ${\r\n                                    v.chart_type\r\n                                }, data_source : ${\r\n                                    v.data_source\r\n                                }, data : ${JSON.stringify(v.data)}`,\r\n                        )}`\r\n                    }\r\n                    style={{\r\n                        color: 'black',\r\n                        margin: 30,\r\n                    }}\r\n                    wrap={true}\r\n                />\r\n            </Page>\r\n        </Document>\r\n    )\r\n\r\n    const [instance, updateInstance] = usePDF({ document: MyDoc })\r\n    if (instance.loading) return <div>Loading ...</div>\r\n\r\n    if (instance.error) return <div>Something went wrong: {instance.error}</div>\r\n\r\n    return (\r\n        <a href={instance.url} download=\"test.pdf\">\r\n            <button>Export to PDF</button>\r\n        </a>\r\n    )\r\n}\r\nexport default ExportPdf\r\n","export const login = (user) => {\r\n    return {\r\n        type: 'login',\r\n        payload: user,\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: 'logout',\r\n    }\r\n}\r\n\r\nexport const addUser = (data) => {\r\n    return {\r\n        type: 'addUser',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const editUser = (data) => {\r\n    return {\r\n        type: 'editUser',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => {\r\n    return {\r\n        type: 'deleteUser',\r\n        payload: id,\r\n    }\r\n}\r\n\r\nexport const addData = (data) => {\r\n    return {\r\n        type: 'addData',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const editData = (data) => {\r\n    return {\r\n        type: 'editData',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const deleteData = (id) => {\r\n    return {\r\n        type: 'deleteData',\r\n        payload: id,\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    TextField,\r\n    Button,\r\n    Fab,\r\n} from '@material-ui/core'\r\nimport PostAddIcon from '@material-ui/icons/PostAdd'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n} from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addData, deleteData, editData } from '../../actions'\r\nimport Chart from 'chart.js/auto'\r\nimport Xls from '../exportXls'\r\nimport Pdf from '../exportPdf'\r\nimport './index.scss'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nconst Home = () => {\r\n    const dataList = useSelector((state) => state.data)\r\n    const [editvals, seteditvals] = React.useState('')\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open1, setOpen1] = React.useState(false)\r\n\r\n    const chartRefs = React.useRef([])\r\n    const id = React.useRef(dataList[dataList.length - 1].id + 1)\r\n    const charts = React.useRef([])\r\n\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        await setOpen(false)\r\n        const tar = e.target\r\n        const details = {\r\n            id: id.current,\r\n            chart_label: tar.chart_label.value,\r\n            chart_type: tar.chart_type.value,\r\n            data_source: tar.data_source.value,\r\n            data:\r\n                tar.chart_type.value !== 'bubble'\r\n                    ? [13, 15, 51, 53]\r\n                    : [\r\n                          {\r\n                              x: 20,\r\n                              y: 30,\r\n                              r: 5,\r\n                          },\r\n                          {\r\n                              x: 30,\r\n                              y: 10,\r\n                              r: 10,\r\n                          },\r\n                          {\r\n                              x: 40,\r\n                              y: 20,\r\n                              r: 8,\r\n                          },\r\n                          {\r\n                              x: 50,\r\n                              y: 25,\r\n                              r: 14,\r\n                          },\r\n                      ],\r\n        }\r\n        await dispatch(addData(details))\r\n        id.current++\r\n        chartDraw(details)\r\n    }\r\n\r\n    const chartDraw = (details) => {\r\n        charts.current[details.id] !== undefined &&\r\n            charts.current[details.id].destroy()\r\n        charts.current[details.id] = new Chart(\r\n            chartRefs.current[details.id].getContext('2d'),\r\n            {\r\n                type: details.chart_type,\r\n                data: {\r\n                    labels: [1, 2, 3, 4],\r\n                    datasets: [\r\n                        {\r\n                            label: details.chart_label,\r\n                            data: details.data,\r\n                            backgroundColor: ['rgba(255, 99, 132, 0.2)'],\r\n                            borderColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                                'rgba(153, 102, 255, 1)',\r\n                                'rgba(255, 159, 64, 1)',\r\n                            ],\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        yAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                },\r\n            },\r\n        )\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setOpen1(false)\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        setOpen1(false)\r\n        const tar = e.target\r\n        const editlist = {\r\n            id: parseInt(tar.id.value),\r\n            chart_label: tar.chart_label.value,\r\n            chart_type: tar.chart_type.value,\r\n            data_source: tar.data_source.value,\r\n            data:\r\n                tar.chart_type.value !== 'bubble'\r\n                    ? [13, 15, 51, 53]\r\n                    : [\r\n                          {\r\n                              x: 20,\r\n                              y: 30,\r\n                              r: 5,\r\n                          },\r\n                          {\r\n                              x: 30,\r\n                              y: 10,\r\n                              r: 10,\r\n                          },\r\n                          {\r\n                              x: 40,\r\n                              y: 20,\r\n                              r: 8,\r\n                          },\r\n                          {\r\n                              x: 50,\r\n                              y: 25,\r\n                              r: 14,\r\n                          },\r\n                      ],\r\n        }\r\n        seteditvals('')\r\n        chartDraw(editlist)\r\n        dispatch(editData(editlist))\r\n    }\r\n\r\n    const tempvals = (tid) => {\r\n        setOpen1(true)\r\n        const element = dataList.findIndex((elem) => elem.id === tid)\r\n        seteditvals(dataList[element])\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dataList.forEach((element) => {\r\n            chartDraw(element)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Container style={{ paddingLeft: '73px' }}>\r\n            <Fab\r\n                color=\"secondary\"\r\n                aria-label=\"add\"\r\n                className={classes.fab}\r\n                onClick={handleClickOpen}\r\n            >\r\n                <PostAddIcon />\r\n            </Fab>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <form onSubmit={submit}>\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Add new data\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please enter the details below:\r\n                        </DialogContentText>\r\n\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            name=\"chart_label\"\r\n                            label=\"chart label\"\r\n                            helperText=\"Please enter chart label\"\r\n                        />\r\n                        <FormControl style={{ width: '150px' }}>\r\n                            <InputLabel id=\"chart_type\">Data type</InputLabel>\r\n                            <Select\r\n                                labelId=\"chart_type\"\r\n                                name=\"chart_type\"\r\n                                required\r\n                            >\r\n                                <MenuItem value=\"line\">Line chart</MenuItem>\r\n                                <MenuItem value=\"bar\">Bar chart</MenuItem>\r\n                                <MenuItem value=\"radar\">Radar chart</MenuItem>\r\n                                <MenuItem value=\"doughnut\">\r\n                                    Doughnut chart\r\n                                </MenuItem>\r\n                                <MenuItem value=\"pie\">Pie chart</MenuItem>\r\n                                <MenuItem value=\"polarArea\">\r\n                                    Polar chart\r\n                                </MenuItem>\r\n                                <MenuItem value=\"bubble\">Bubble chart</MenuItem>\r\n                                <MenuItem value=\"scatter\">\r\n                                    Scatter chart\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl\r\n                            style={{ marginLeft: '15px', width: '150px' }}\r\n                        >\r\n                            <InputLabel id=\"data_source\">\r\n                                Data Source\r\n                            </InputLabel>\r\n                            <Select labelId=\"data_source\" name=\"data_source\">\r\n                                <MenuItem value=\"SOAP\">SOAP</MenuItem>\r\n                                <MenuItem value=\"REST\">REST</MenuItem>\r\n                                <MenuItem value=\"GraphQL\">GraphQL</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={<PostAddIcon />}\r\n                            type=\"submit\"\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            {editvals !== '' && (\r\n                <Dialog\r\n                    open={open1}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <form onSubmit={handleEdit}>\r\n                        <DialogTitle id=\"form-dialog-title\">\r\n                            Edit details\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Please edit the details below:\r\n                            </DialogContentText>\r\n                            <input\r\n                                type=\"number\"\r\n                                hidden\r\n                                readOnly\r\n                                name=\"id\"\r\n                                value={editvals.id}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"chart_label\"\r\n                                label=\"chart label\"\r\n                                helperText=\"Please enter chart label\"\r\n                                defaultValue={editvals.chart_label}\r\n                            />\r\n                            <FormControl style={{ width: '150px' }}>\r\n                                <InputLabel id=\"chart_type\">\r\n                                    Data type\r\n                                </InputLabel>\r\n                                <Select\r\n                                    labelId=\"chart_type\"\r\n                                    name=\"chart_type\"\r\n                                    required\r\n                                    defaultValue={editvals.chart_type}\r\n                                >\r\n                                    <MenuItem value=\"line\">Line chart</MenuItem>\r\n                                    <MenuItem value=\"bar\">Bar chart</MenuItem>\r\n                                    <MenuItem value=\"radar\">\r\n                                        Radar chart\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"doughnut\">\r\n                                        Doughnut chart\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"pie\">Pie chart</MenuItem>\r\n                                    <MenuItem value=\"polarArea\">\r\n                                        Polar chart\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"bubble\">\r\n                                        Bubble chart\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"scatter\">\r\n                                        Scatter chart\r\n                                    </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl\r\n                                style={{\r\n                                    marginLeft: '15px',\r\n                                    width: '150px',\r\n                                }}\r\n                            >\r\n                                <InputLabel id=\"data_source\">\r\n                                    Data Source\r\n                                </InputLabel>\r\n                                <Select\r\n                                    labelId=\"data_source\"\r\n                                    name=\"data_source\"\r\n                                    defaultValue={editvals.data_source}\r\n                                >\r\n                                    <MenuItem value=\"SOAP\">SOAP</MenuItem>\r\n                                    <MenuItem value=\"REST\">REST</MenuItem>\r\n                                    <MenuItem value=\"GraphQL\">GraphQL</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                startIcon={<PostAddIcon />}\r\n                                type=\"submit\"\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n            )}\r\n\r\n            <div className=\"content\">\r\n                {dataList.map((v, i) => (\r\n                    <div key={i} className=\"chart-holder resizable\">\r\n                        <canvas ref={(el) => (chartRefs.current[v.id] = el)} />\r\n                        <EditIcon\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            onClick={() => tempvals(v.id)}\r\n                        />\r\n                        <DeleteIcon\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={() => dispatch(deleteData(v.id))}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <Xls />\r\n            <Pdf />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Container, IconButton } from '@material-ui/core'\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    makeStyles,\r\n    Fab,\r\n} from '@material-ui/core'\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    TextField,\r\n    Button,\r\n} from '@material-ui/core'\r\nimport PostAddIcon from '@material-ui/icons/PostAdd'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addUser, editUser, deleteUser } from '../../actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nconst UserManage = () => {\r\n    const [userEdit, setUserEdit] = React.useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [tempVals, setTempVals] = React.useState('')\r\n    const dispatch = useDispatch()\r\n    const users = useSelector((state) => state.users)\r\n    const id = React.useRef(users[users.length - 1].id + 1)\r\n\r\n    const classes = useStyles()\r\n\r\n    const tempHolder = (tid) => {\r\n        setUserEdit(true)\r\n        const element = users.findIndex((elem) => elem.id === tid)\r\n        setTempVals(users[element])\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        await setOpen(false)\r\n        const tar = e.target\r\n        const details = {\r\n            id: id.current,\r\n            name: tar.name.value,\r\n            role: tar.role.value,\r\n            isAdmin: tar.permissions.value === 'All' && true,\r\n            permissions: tar.permissions.value,\r\n        }\r\n        await dispatch(addUser(details))\r\n        id.current++\r\n    }\r\n\r\n    const handleUserEdit = (e) => {\r\n        e.preventDefault()\r\n        setUserEdit(false)\r\n        const tar = e.target\r\n        const editList = {\r\n            id: parseInt(tar.id.value),\r\n            name: tar.name.value,\r\n            role: tar.role.value,\r\n            isAdmin: tar.permissions.value === 'All' && true,\r\n            permissions: tar.permissions.value,\r\n        }\r\n        setTempVals('')\r\n        dispatch(editUser(editList))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Fab\r\n                color=\"secondary\"\r\n                aria-label=\"add\"\r\n                className={classes.fab}\r\n                onClick={() => setOpen(true)}\r\n            >\r\n                <PostAddIcon />\r\n            </Fab>\r\n            <TableContainer\r\n                component={Container}\r\n                style={{ paddingLeft: '73px' }}\r\n            >\r\n                <Table size=\"small\" stickyHeader={true}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">\r\n                                <b>UserID</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <b>User Name</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <b>Role</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <b>Permissions</b>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <b>edit/delete</b>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {users.map((val, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    align=\"center\"\r\n                                >\r\n                                    {val.id}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{val.name}</TableCell>\r\n                                <TableCell align=\"center\">{val.role}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {val.permissions}\r\n                                </TableCell>\r\n                                {val.name !== 'admin' && (\r\n                                    <TableCell align=\"center\">\r\n                                        <IconButton\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            onClick={() => tempHolder(val.id)}\r\n                                        >\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            color=\"secondary\"\r\n                                            size=\"small\"\r\n                                            onClick={() =>\r\n                                                dispatch(deleteUser(val.id))\r\n                                            }\r\n                                        >\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <form onSubmit={submit}>\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Add new User\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please enter the details below:\r\n                        </DialogContentText>\r\n\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            name=\"name\"\r\n                            label=\"name\"\r\n                            helperText=\"Please enter Name\"\r\n                        />\r\n                        <FormControl style={{ width: '150px' }}>\r\n                            <InputLabel id=\"role\">Role</InputLabel>\r\n                            <Select labelId=\"role\" name=\"role\" required>\r\n                                <MenuItem value=\"admin\">admin</MenuItem>\r\n                                <MenuItem value=\"account manager\">\r\n                                    account manager\r\n                                </MenuItem>\r\n                                <MenuItem value=\"client\">client</MenuItem>\r\n                                <MenuItem value=\"blocked\">blocked</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl\r\n                            style={{\r\n                                marginLeft: '15px',\r\n                                width: '150px',\r\n                            }}\r\n                        >\r\n                            <InputLabel id=\"permissions\">\r\n                                Permissions\r\n                            </InputLabel>\r\n                            <Select labelId=\"permissions\" name=\"permissions\">\r\n                                <MenuItem value=\"All\">All</MenuItem>\r\n                                <MenuItem value=\"Read\">Read</MenuItem>\r\n                                <MenuItem value=\"Write\">Write</MenuItem>\r\n                                <MenuItem value=\"Read/Write\">\r\n                                    Read/Write\r\n                                </MenuItem>\r\n                                <MenuItem value=\"None\">None</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpen(false)} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={<PostAddIcon />}\r\n                            type=\"submit\"\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            {tempVals !== '' && (\r\n                <Dialog\r\n                    open={userEdit}\r\n                    onClose={() => setUserEdit(false)}\r\n                    aria-labelledby=\"User-edit\"\r\n                >\r\n                    <form onSubmit={handleUserEdit}>\r\n                        <DialogTitle id=\"User-edit\">Edit details</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Please edit the details below:\r\n                            </DialogContentText>\r\n                            <input\r\n                                type=\"number\"\r\n                                hidden\r\n                                readOnly\r\n                                name=\"id\"\r\n                                value={tempVals.id}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"name\"\r\n                                label=\"name\"\r\n                                helperText=\"Please enter Name\"\r\n                                defaultValue={tempVals.name}\r\n                            />\r\n                            <FormControl style={{ width: '150px' }}>\r\n                                <InputLabel id=\"role\">Role</InputLabel>\r\n                                <Select\r\n                                    labelId=\"role\"\r\n                                    name=\"role\"\r\n                                    required\r\n                                    defaultValue={tempVals.role}\r\n                                >\r\n                                    <MenuItem value=\"admin\">admin</MenuItem>\r\n                                    <MenuItem value=\"account manager\">\r\n                                        account manager\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"client\">client</MenuItem>\r\n                                    <MenuItem value=\"blocked\">blocked</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl\r\n                                style={{\r\n                                    marginLeft: '15px',\r\n                                    width: '150px',\r\n                                }}\r\n                            >\r\n                                <InputLabel id=\"permissions\">\r\n                                    Permissions\r\n                                </InputLabel>\r\n                                <Select\r\n                                    labelId=\"permissions\"\r\n                                    name=\"permissions\"\r\n                                    defaultValue={tempVals.permissions}\r\n                                >\r\n                                    <MenuItem value=\"All\">All</MenuItem>\r\n                                    <MenuItem value=\"Read\">Read</MenuItem>\r\n                                    <MenuItem value=\"Write\">Write</MenuItem>\r\n                                    <MenuItem value=\"Read/Write\">\r\n                                        Read/Write\r\n                                    </MenuItem>\r\n                                    <MenuItem value=\"None\">None</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button\r\n                                onClick={() => setUserEdit(false)}\r\n                                color=\"primary\"\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                startIcon={<PostAddIcon />}\r\n                                type=\"submit\"\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserManage\r\n","import React from 'react'\r\nimport Navbar from '../sidebar'\r\nimport Home from './home'\r\nimport UserManage from './userManage'\r\nimport './index.scss'\r\n\r\nconst Admin = () => {\r\n    const [presentPage, setPresentPage] = React.useState('Home')\r\n    return (\r\n        <>\r\n            <Navbar setPresentPage={setPresentPage} />\r\n            {presentPage === 'Home' ? <Home /> : <UserManage />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n"],"sourceRoot":""}